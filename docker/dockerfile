FROM ubuntu:20.04
ENV DEBIAN_FRONTEND=noninteractive

ENV FLASK_PORT=12000
ENV POSTGRES_PORT=5432
ENV SERVER_PORT=15000
ENV REACT_UI_PORT=3000
# reactui port is 3000 default, postgres always uses 5432

ENV DB_NAME=roja_postgres
ENV DB_USER=roja_user
ENV DB_PASSWORD=roja_user
ENV DB_HOST=localhost
ENV DB_PORT=${POSTGRES_PORT}
ENV EXPERIMENT_NAME="watsonx_insurance_claims_experiment"
ENV API_URL=http://localhost:${FLASK_PORT}
ENV FLASK_SERVER_URL=http://127.0.0.1:${FLASK_PORT}
ENV FLASK_APP=flask_app.py 
ENV HOST_IP_FOR_API_SERVER=localhost
# Set the working directory
WORKDIR /app

# Update the package list and install necessary dependencies
RUN apt-get update && apt-get install -y \
    python3 python3-pip nodejs npm postgresql postgresql-contrib nginx curl

# Copy the requirements file into the container
COPY requirements.txt requirements.txt

# Install any needed packages specified in requirements.txt
RUN pip3 install --no-cache-dir -r requirements.txt
COPY ../. .
# Install the latest version of Node.js (since Ubuntu may have an outdated version)
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \
    apt-get install -y nodejs

# Stage 1: Build React frontend
RUN cd client-app && npm install && npm install --save-dev cross-env

# Stage 2: Setup Flask backend

# Copy requirements and install them
RUN cd /app/applications/flask_server &&  pip install --no-cache-dir -r requirements.txt

# Stage 3: Setup WebSocket
RUN  cd /app/websocket-server && npm install

# Start PostgreSQL service and create the user and database
RUN service postgresql start && \
    sleep 5 && \
    su - postgres -c "psql -c \"CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';\"" && \
    su - postgres -c "psql -c \"CREATE DATABASE $DB_NAME OWNER $DB_USER;\"" && \
    su - postgres -c "psql -c \"ALTER USER postgres WITH PASSWORD '$DB_PASSWORD';\"" && \
    service postgresql stop && \
    rm -rf /var/lib/apt/lists/*

# Modify the pg_hba.conf file to use md5 authentication instead of peer
RUN sed -i "s/local\s\+all\s\+postgres\s\+peer/local all postgres md5/" /etc/postgresql/*/main/pg_hba.conf && \
    sed -i "s/local\s\+all\s\+all\s\+peer/local all all md5/" /etc/postgresql/*/main/pg_hba.conf

# Expose necessary ports
EXPOSE ${SERVER_PORT} ${FLASK_PORT} ${POSTGRES_PORT} ${REACT_UI_PORT}

COPY /docker/entrypoint.sh /app/entrypoint.sh
ENTRYPOINT ["/app/entrypoint.sh"]
